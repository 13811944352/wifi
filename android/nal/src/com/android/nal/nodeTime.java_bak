package com.android.nal;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Bundle;
import android.os.IBinder;
import android.os.Handler;
import android.os.Message;
import android.content.ComponentName;
import android.widget.Button;
import android.widget.ImageButton;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.EditText;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.LinearLayout;
import android.content.res.Resources; 
import java.util.Calendar;
import android.app.TimePickerDialog;

import com.android.nal.utils.l;
import com.android.nal.service.MainService;
import com.android.nal.local.localConfig;
import com.android.nal.net.netConfig;
import android.widget.Toast;
import android.content.DialogInterface;


public class nodeTime extends Activity {
	Context mC = null;
	nodeTime mA = null;
	deviceConfig mD;
	String mId;
	nodeConfig mN = null;
	MainService mS = null;
	boolean isModify;

	private void showToast(String msg){
		Toast toast=Toast.makeText(mC, msg ,Toast.LENGTH_SHORT); 
		toast.show();
	}

	private nodeConfig initNodeConfig(deviceConfig d,String id) {
		nodeConfig n = new nodeConfig();
		n.deviceId = d.deviceId;
		n.nodeId = id;
		n.nodeConfig  = 0;
		return n;
	}

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
		mC = this;
		mA = this;
		mS = MainActivity.getService();
		Intent i = getIntent(); 
		String xx = i.getStringExtra("device");  
		log("nodeTime getIntent:"+xx);
		mD = deviceConfig.j2d(xx);
		mId = i.getStringExtra("nodeId");
		xx = i.getStringExtra("node");
		if(xx.equals("null")) 
			mN = null;
		else
			mN = nodeConfig.j2n(xx);
		log("nodeTime getDevice:"+xx);
		log("nodeTime getId:"+mId);
		//mN = localConfig.getInstance().getNodeConfig(mD.deviceId,mId);
		if(mN == null) {
			mN = initNodeConfig(mD,mId);
		}

		log("mN:"+mN.n2j(mN));
		if(mN != null) {
			initView();
		}
	}

	String getTemp() {
		String temp = mS.doQuery(mD.deviceId,"temp"+(mId));
		return temp;
	}
	int setTemp(int type,String value) {
		int result = mS.doSet(mD.deviceId,"tempcfg"+(mId),type,value);
		return result;
	}

	void setModify() {
		isModify = true;
	}

	void updateNode() {
        new Thread() {
                @Override
                public void run(){
					log("mN:"+mN.n2j(mN));
                    mS.syncNetNode(mN);
                    //mHandler.sendEmptyMessageDelayed(, 0);
                }
         }.start();
	}

	void initNodeName() {
		final TextView nodename = (TextView)findViewById(R.id.nodename);
		nodename.setText(mN.nodeName);
		if(mN.nodeName.equals("")) {
			nodename.setText("未命名");
		}
		Button temp = (Button)findViewById(R.id.temp);
		temp.setText(getTemp());

		Button nodename_modify = (Button)findViewById(R.id.nodename_modify);
		final EditText ett = new EditText(mC);
		nodename_modify.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View arg0) {
                    //Intent i = new Intent();
                    //i.setClass(nodeTime.this,nodeTime.class);
                    //mC.startActivity(i);
					new AlertDialog.Builder(mC).
						setTitle("给房间改名:").
						setIcon(android.R.drawable.ic_dialog_info).
						setView(ett).
						setPositiveButton("确定", new DialogInterface.OnClickListener(){
    						public void onClick(DialogInterface arg0,int arg1){
								mN.nodeName = ett.getText().toString();  
								nodename.setText(mN.nodeName);
								log("mN=="+mN.deviceId+"-"+mN.nodeId+"-"+mN.nodeName);
								//mS.syncNetNode(mN);
								setModify();
								//localConfig.getInstance().setNodeConfig(mN);
								//localConfig.getInstance().getNodeConfig(mD.deviceId,mId);
							}
						}).
						setNegativeButton("取消", null).
						show();
                }
		});
	}

	Spinner mode_select;// = (Spinner)findViewById(R.id.mode_select);;
	LinearLayout smart;// = (LinearLayout) findViewById(R.id.smart);
	LinearLayout nosmart;// = (LinearLayout) findViewById(R.id.smart);
	Button safe;// = (Button)findViewById(R.id.safe);
	Button jieneng;// = (Button)findViewById(R.id.jieneng);
	Button fangdong;// = (Button)findViewById(R.id.fangdong);
	Button done;// = (Button)findViewById(R.id.done);
	EditText et;// = (EditText)findViewById(R.id.node_temp);


	void setMt() {
		smart.setVisibility(View.GONE);
		nosmart.setVisibility(View.VISIBLE);
		et.setText(""+(mN.nodeTemp));
	}


	void setSmart() {
		mode_select.setSelection(1,true);
		nosmart.setVisibility(View.GONE);
		smart.setVisibility(View.VISIBLE);
		if(mN.nodeTemp == -101) { //safe
			safe.setBackgroundResource(R.drawable.node_main_safe_select);
			jieneng.setBackgroundResource(R.drawable.node_main_jieneng);
			fangdong.setBackgroundResource(R.drawable.node_main_fangdong);
			return ;
		}
		if(mN.nodeTemp == -102) { //jieneng
			safe.setBackgroundResource(R.drawable.node_main_safe);
			jieneng.setBackgroundResource(R.drawable.node_main_jieneng_select);
			fangdong.setBackgroundResource(R.drawable.node_main_fangdong);
			return ;
		}
		if(mN.nodeTemp == -103) { //fangdong
			safe.setBackgroundResource(R.drawable.node_main_safe);
			jieneng.setBackgroundResource(R.drawable.node_main_jieneng);
			fangdong.setBackgroundResource(R.drawable.node_main_fangdong_select);
			return ;
		}
		safe.setBackgroundResource(R.drawable.node_main_safe);
		jieneng.setBackgroundResource(R.drawable.node_main_jieneng);
		fangdong.setBackgroundResource(R.drawable.node_main_fangdong);
	}

	void initView() {
		setContentView(R.layout.node_xml);
		initNodeName();
		smart = (LinearLayout) findViewById(R.id.smart);
		nosmart = (LinearLayout) findViewById(R.id.nosmart);
		mode_select = (Spinner)findViewById(R.id.mode_select);;
		safe = (Button)findViewById(R.id.safe);
		jieneng = (Button)findViewById(R.id.jieneng);
		fangdong = (Button)findViewById(R.id.fangdong);
		et = (EditText)findViewById(R.id.node_temp);

		done = (Button)findViewById(R.id.done);
		String[] m={"手动","智能"};
        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,android.R.layout.simple_spinner_item,m);
        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        mode_select.setAdapter(adapter);

		Spinner nodetype = (Spinner)findViewById(R.id.nodetype);
		String[] mm={"卧室","客厅","书房","卫生间","其他"};
		adapter =  new ArrayAdapter<String>(this,android.R.layout.simple_spinner_item,mm);
		adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
		nodetype.setAdapter(adapter);

		int type = mN.nodeType;
		if(type == -1)
			nodetype.setSelection(0,true);
		else
			nodetype.setSelection(type,true);

        nodetype.setOnItemSelectedListener(new OnItemSelectedListener() {
				public void onItemSelected(AdapterView<?> arg0, View arg1, int arg2,long arg3) {
					log("onItemSelected arg2=="+arg2);
					mN.nodeType = arg2;
					//localConfig.getInstance().setNodeConfig(mN);
								setModify();
				}

                public void onNothingSelected(AdapterView<?> arg0) {
                }
            }
        );

		int mode = mN.nodeConfig;
		mode_select.setSelection(mode,true);
		if(mode == 0) { //手动
			setMt();
		} else {
			setSmart();
		}
        mode_select.setOnItemSelectedListener(new OnItemSelectedListener() {
               public void onItemSelected(AdapterView<?> arg0, View arg1, int arg2,long arg3) {
					if(arg2 == 0) {
						mN.nodeConfig = 0;
						setModify();
						setMt();
						//smart.setVisibility(View.GONE);
						//nosmart.setVisibility(View.VISIBLE);
					}
					if(arg2 == 1) {
						mN.nodeConfig = 1;
						setModify();
						setSmart();
						//nosmart.setVisibility(View.GONE);
						//smart.setVisibility(View.VISIBLE);
					}
                }
 
                public void onNothingSelected(AdapterView<?> arg0) {
                }
            }
        );
/*
		if(mode > 100) {
			mode_select.setSelection(1,true);
			nosmart.setVisibility(View.GONE);
			smart.setVisibility(View.VISIBLE);

		}else {
			mode_select.setSelection(0,true);
			smart.setVisibility(View.GONE);
			nosmart.setVisibility(View.VISIBLE);
		}
        //mode_select.setVisibility(View.VISIBLE);
*/
/*		
		Button b;
		b = (Button)findViewById(R.id.safe_start);
		b.setOnClickListener(time_select);
		b = (Button)findViewById(R.id.safe_end);
		b.setOnClickListener(time_select);
		b = (Button)findViewById(R.id.jieneng_start);
		b.setOnClickListener(time_select);
		b = (Button)findViewById(R.id.jieneng_end);
		b.setOnClickListener(time_select);
		b = (Button)findViewById(R.id.fangdong_start);
		b.setOnClickListener(time_select);
		b = (Button)findViewById(R.id.fangdong_end);
		b.setOnClickListener(time_select);
*/
        //mode_select.setVisibility(View.VISIBLE);

        safe.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View arg0) {
				mN.nodeTemp = -101;
				setModify();
				setSmart();
/*
				safe.setBackgroundResource(R.drawable.node_main_safe_select);
				jieneng.setBackgroundResource(R.drawable.node_main_jieneng);
				fangdong.setBackgroundResource(R.drawable.node_main_fangdong);
                //mA.finish();
				mN.nodeConfig = 101;
				int v = -1;
				if(mN.nodeType == 0) 
					v = 20;
				if(mN.nodeType == 1) 
					v = 18;
				if(mN.nodeType == 2) 
					v = 18;
				if(mN.nodeType == 3) 
					v = 16;
				if(mN.nodeType == 4) 
					v = 18;
				setTemp(2,""+v);
				localConfig.getInstance().setNodeConfig(mN);
*/
            }
        });
        jieneng.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View arg0) {
				mN.nodeTemp = -102;
				setModify();
				setSmart();
/*
				safe.setBackgroundResource(R.drawable.node_main_safe);
				jieneng.setBackgroundResource(R.drawable.node_main_jieneng_select);
				fangdong.setBackgroundResource(R.drawable.node_main_fangdong);
				mN.nodeConfig = 102;
				int v = -1;
				if(mN.nodeType == 0) 
					v = 18;
				if(mN.nodeType == 1) 
					v = 16;
				if(mN.nodeType == 2) 
					v = 16;
				if(mN.nodeType == 3) 
					v = 14;
				if(mN.nodeType == 4) 
					v = 18;
				setTemp(2,""+v);
				localConfig.getInstance().setNodeConfig(mN);
*/
            }
        });
        fangdong.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View arg0) {
				mN.nodeTemp = -103;
				setModify();
				setSmart();
/*
				safe.setBackgroundResource(R.drawable.node_main_safe);
				jieneng.setBackgroundResource(R.drawable.node_main_jieneng);
				fangdong.setBackgroundResource(R.drawable.node_main_fangdong_select);
				mN.nodeConfig = 103;
				int v = 5;
				setTemp(2,""+v);
				localConfig.getInstance().setNodeConfig(mN);
*/  
          }
        });

        done.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View arg0) {
				String  s = et.getText().toString();
				int i = -1;
				i=Integer.parseInt(s);
				mN.nodeTemp= i;
				setModify();
				//setTemp(2,""+i);
            }
        });


		Button back = (Button)findViewById(R.id.back);
        back.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View arg0) {
                mA.finish();
            }
        });

		Button menu = (Button)findViewById(R.id.menu);
        menu.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View arg0) {
				if(isModify) {
					updateNode();
					String  s = et.getText().toString();
					int temp = getSetTemp();// = -1;
					log("set temp :"+temp);
					if(mN.nodeTime == 0)
						setTemp(2,""+temp);
				}
				try {
					Thread.sleep(1000);
				} catch(Exception e) {
					;
				}
                mA.finish();
            }
        });
	}

	private int getSetTemp() {
		log("set temp mN:"+mN.nodeTemp);
		log("set temp type:"+mN.nodeType);

		if(mN.nodeTemp > -50)
			return mN.nodeTemp;
		int v = -1;
		if(mN.nodeTemp== -101) {
			if(mN.nodeType == 0) 
				v = 20;
			if(mN.nodeType == 1) 
				v = 18;
			if(mN.nodeType == 2) 
				v = 18;
			if(mN.nodeType == 3) 
				v = 16;
			if(mN.nodeType == 4) 
				v = 18;
		}
		if(mN.nodeTemp == -102) {
			if(mN.nodeType == 0) 
				v = 18;
			if(mN.nodeType == 1) 
				v = 16;
			if(mN.nodeType == 2) 
				v = 16;
			if(mN.nodeType == 3) 
				v = 14;
			if(mN.nodeType == 4) 
				v = 18;
		}
		if(mN.nodeTemp == -103) {
				v = 5;
		}
		return v;
		
	}

	private void setDate(String id,Calendar c) {
	}

	private View.OnClickListener time_select = new View.OnClickListener(){
		@Override
        public void onClick(View arg0) {
			Resources res = mC.getResources();
			final String id = res.getResourceEntryName(arg0.getId());
			final Calendar c = Calendar.getInstance();
			TimePickerDialog dialog = new TimePickerDialog(mC,
				new TimePickerDialog.OnTimeSetListener() {
					@Override
                    public void onTimeSet(android.widget.TimePicker view, int h,int m) {
						c.set(Calendar.HOUR_OF_DAY,h);                        
						c.set(Calendar.MINUTE, h);                        
						c.set(Calendar.SECOND, 0);                        
						c.set(Calendar.MILLISECOND, 0);   
						log("time:"+h+":"+m);
						//if(id.equals(""))
						setDate(id,c);
					}
                }, 0,0,true);
            dialog.show();
        }
	};

    @Override
    public void onStart() {
        super.onStart();
	}

    @Override
    public void onDestroy() {
        super.onDestroy();
	}

	private Handler mH = new Handler() {
		@Override
		public void handleMessage(Message msg) {
			switch(msg.what) {
				case(0):
					//onRegSucess();
					break;
				case(1):
				default:
					//onRegFail();
					break;
			}
		}
		
	};


    private void log(String line) {
        l.d(line);
    }  

}

